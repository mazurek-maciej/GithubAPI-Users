{"ast":null,"code":"import _classCallCheck from \"/Users/maciejmazurek/Programowanie/Github/github-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maciejmazurek/Programowanie/Github/github-api/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maciejmazurek/Programowanie/Github/github-api/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maciejmazurek/Programowanie/Github/github-api/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maciejmazurek/Programowanie/Github/github-api/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maciejmazurek/Programowanie/Github/github-api/src/containers/userProfile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { loadingState } from '../actions';\nvar GITHUB_SEARCH = \"https://api.github.com/users/\";\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserProfile).call(this, props));\n    _this.state = {\n      userData: [],\n      repos: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      axios.get(\"\".concat(GITHUB_SEARCH).concat(this.props.match.params.login)).then(function (response) {\n        return _this2.setState({\n          userData: response.data\n        });\n      }).then(this.setState({\n        isLoading: false\n      })).catch(function (error) {\n        return _this2.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      axios.get(\"\".concat(GITHUB_SEARCH).concat(this.props.match.params.login, \"/repos\")).then(function (response) {\n        return _this3.setState({\n          repos: response.data\n        });\n      }).then(this.setState({\n        isLoading: false\n      })).catch(function (error) {\n        return _this3.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          userData = _this$state.userData,\n          repos = _this$state.repos,\n          isLoading = _this$state.isLoading;\n      console.log(this.state.userData);\n      console.log(this.state.repos);\n\n      if (!isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userData.avatar_url,\n        alt: userData.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, userData.login), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, userData.public_repos), repos.map(function (repo) {\n        return React.createElement(\"li\", {\n          key: repo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, repo.id);\n      }));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loadingState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadingState: loadingState\n})(UserProfile);","map":{"version":3,"sources":["/Users/maciejmazurek/Programowanie/Github/github-api/src/containers/userProfile.js"],"names":["React","Component","connect","axios","loadingState","GITHUB_SEARCH","UserProfile","props","state","userData","repos","isLoading","setState","get","match","params","login","then","response","data","catch","error","console","log","avatar_url","public_repos","map","repo","id","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { loadingState } from '../actions';\n\nconst GITHUB_SEARCH = `https://api.github.com/users/`;\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            userData: [],\n            repos: [],\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState( { isLoading: true })\n        axios\n        .get(`${GITHUB_SEARCH}${this.props.match.params.login}`)\n        .then(response => this.setState({\n            userData: response.data\n        }))\n        .then(this.setState( { isLoading: false }))\n        .catch(error => this.setState({\n            error,\n          }))     \n    }\n    componentWillMount() {\n        this.setState( { isLoading: true })\n        axios\n          .get(`${GITHUB_SEARCH}${this.props.match.params.login}/repos`)\n          .then(response => this.setState({\n              repos: response.data,\n          }))\n          .then(this.setState( { isLoading: false }))\n          .catch(error => this.setState({\n              error,\n            }))\n    }\n    \n    render() {\n        const { userData, repos, isLoading }  = this.state\n        console.log(this.state.userData)\n        console.log(this.state.repos)\n\n        if (!isLoading) {\n            return <div>Loading</div>\n        }\n        return (\n            <div>\n                <img src={userData.avatar_url} alt={userData.login} />\n                <p>{userData.login}</p>\n                <p>{userData.public_repos}</p>\n                {repos.map(repo => <li key={repo.id}>{repo.id}</li>)}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { loading: state.loadingState }\n}\n\nexport default connect(mapStateToProps, { loadingState })(UserProfile)"]},"metadata":{},"sourceType":"module"}